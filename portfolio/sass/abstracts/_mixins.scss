@mixin clearfix {
    &::after{
        content: "";
        display: table;
        clear: both;
    }
}

@mixin absCenter{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin glitchCopy { 
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
@mixin glitch {
      
    $color-pink: #ff00c1;
    $color-blue: #00fff9;
    // for the glith to work it need data-text="" and <span class="sub"></span>
      &:hover{
          animation: glitch-skew 1s infinite linear alternate-reverse;
          &::before{
            @include glitchCopy;
            left: 2px;
            text-shadow: -2px 0 $color-pink;
            clip: rect(44px, 450px, 56px, 0);
            animation: glitch-anim 5s infinite linear alternate-reverse;
          }
          
          &::after {
            @include glitchCopy;
            left: -2px;
            text-shadow: -2px 0 $color-blue,2px 2px $color-pink;
            animation: glitch-anim2 1s infinite linear alternate-reverse;
          }
        }
        
        @keyframes glitch-anim {
          $steps: 20;
          @for $i from 0 through $steps {
            #{percentage($i*(1/$steps))} {
              clip: rect(random(100)+px, 9999px, random(100)+px, 0);
              transform: skew((random(100) / 100) + deg);
            }
          }
        }
        
        @keyframes glitch-anim2 {
          $steps: 20;
          @for $i from 0 through $steps {
            #{percentage($i*(1/$steps))} {
              clip: rect(random(100)+px, 9999px, random(100)+px, 0);
              transform: skew((random(100) / 100) + deg);
            }
          }
        }
        
        @keyframes glitch-skew {
          $steps: 10;
          @for $i from 0 through $steps {
            #{percentage($i*(1/$steps))} {
              transform: skew((random(10) - 5) + deg);
            }
          }
        }
          
  }




// Media Query manager 

 
/*
0-600px: phone
600px - 900px: tablet portrait
900px - 1200px: tablet landscape
1200- 1800 is where our normal style apply 
1800px + : big screen

*/


/*
$breakpoint argument choices
- phone
-tab-port
-tab-land
-big-desktop 

Order: base + typography > General layout + grid > page  layout > components 
1em = 16px
*/
@mixin respond($breakpoint) {
    @if $breakpoint == phone{
        @media (max-width: 37.5em) { @content}; // 600px
    }
    @if $breakpoint == tab-port{
        @media (max-width: 56.25em) {@content }; //900px
    }
    @if $breakpoint == tab-land{
        @media (max-width: 75em) {@content}; // 1200px
    }
    @if $breakpoint == big-desktop{
        @media (min-width: 125em) {@content}; // 2000px
    }
}